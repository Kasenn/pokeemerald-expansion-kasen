mapscripts OldaleTown_PokemonCenter_2F_MapScripts{}

script IvTraining{
	if(!flag(FLAG_CORAL_FLAG_1)){
		msgbox(OldaleTown_PokemonCenter_1F_Text_Train, MSGBOX_NPC)
		end
	}
	lockall
	setvar(VAR_0x8008, 5) // BP Cost
	buffernumberstring(STR_VAR_1, VAR_0x8008)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	goto_if_ge(VAR_TEMP_1, VAR_0x8008, EvTraining_Setup)
	msgbox(Training_NotEnoughPoints)
	release
	end
}

script EvTraining_Setup{
	msgbox(EVTraining_Intro)
	special(ShowBattlePointsWindow)
    message(EVTraining_Type)
	waitmessage
    multichoice(21, 0, 114, 0)
    closemessage
	special(CloseBattlePointsWindow)
	copyvar(VAR_0x8004, VAR_0x8008)
	if(var(VAR_RESULT) == 0){
		special(TakeFrontierBattlePoints)
		trainerbattle_no_intro(TRAINER_FELIX, TrainingFinished)
	}
	elif(var(VAR_RESULT) == 1){
		special(TakeFrontierBattlePoints)
		trainerbattle_no_intro(TRAINER_VIOLET, TrainingFinished)
	}
	elif(var(VAR_RESULT) == 2){
		special(TakeFrontierBattlePoints)
		trainerbattle_no_intro(TRAINER_ROSE_2, TrainingFinished)
	}
	elif(var(VAR_RESULT) == 3){
		special(TakeFrontierBattlePoints)
		trainerbattle_no_intro(TRAINER_ROSE_3, TrainingFinished)
	}
	elif(var(VAR_RESULT) == 4){
		special(TakeFrontierBattlePoints)
		trainerbattle_no_intro(TRAINER_ROSE_4, TrainingFinished)
	}
	elif(var(VAR_RESULT) == 5){
		special(TakeFrontierBattlePoints)
		trainerbattle_no_intro(TRAINER_ROSE_5, TrainingFinished)
	}
	else{
		release
		end
	}
}

text EVTraining_Intro{
	"This is the EV Training Service.\n"
	"Each round of training costs\l"
	"5 Battle Points."
}
text EVTraining_Type{
	"Which type of training would\n"
	"you like to have?"
}

text TrainingFinished{
	"Thank you, please come again."
}
text Training_NotEnoughPoints{
	"This service costs\n"
	"{STR_VAR_1} Battle Points.\p"
	"I'm sorry, but you don't have enough\n"
	"Battle Points…"
}
text RecommendedLevel{
	"This is the Level Training Service.\p"
	"The team in this Training Club is set\n"
	"to level {STR_VAR_3} and is intended for teams\l"
	"up to level {STR_VAR_2}.\p"
	"Would you like to use the service?\p"
	"Each use of the service costs\n"
	"{STR_VAR_1} Battle Points."
}
text YourPokemonIsAboveLevel{
	"You have Pokémon that are above the\n"
	"level cap of this Training Club and\l"
	"thus do not gain any experience.\p"
	"Are you sure you want to continue?"
}

script LevelTraining1{
	if(!flag(FLAG_CORAL_FLAG_1)){
		msgbox(OldaleTown_PokemonCenter_1F_Text_Train, MSGBOX_NPC)
		end
	}
	setvar(VAR_POKECENTER_TRAINING, 1)
	setvar(VAR_0x8008, 2)
	goto(LevelTrainingCheck)
}
script LevelTraining2{
	setvar(VAR_POKECENTER_TRAINING, 2)
	setvar(VAR_0x8008, 3)
	goto(LevelTrainingCheck)
}
script LevelTraining3{
	setvar(VAR_POKECENTER_TRAINING, 3)
	setvar(VAR_0x8008, 3)
	goto(LevelTrainingCheck)
}
script LevelTraining4{
	setvar(VAR_POKECENTER_TRAINING, 4)
	setvar(VAR_0x8008, 5)
	goto(LevelTrainingCheck)
}
script LevelTraining5{
	setvar(VAR_POKECENTER_TRAINING, 5)
	setvar(VAR_0x8008, 7)
	goto(LevelTrainingCheck)
}
script LevelTraining6{
	setvar(VAR_POKECENTER_TRAINING, 6)
	setvar(VAR_0x8008, 8)
	goto(LevelTrainingCheck)
}
script LevelTraining7{
	setvar(VAR_POKECENTER_TRAINING, 7)
	setvar(VAR_0x8008, 9)
	goto(LevelTrainingCheck)
}
script LevelTraining8{
	setvar(VAR_POKECENTER_TRAINING, 8)
	setvar(VAR_0x8008, 10)
	goto(LevelTrainingCheck)
}

script LevelTrainingCheck{
	lock
	buffernumberstring(STR_VAR_1, VAR_0x8008)
	specialvar(VAR_TEMP_1, GetFrontierBattlePoints)
	goto_if_ge(VAR_TEMP_1, VAR_0x8008, LevelTrainingMain)
	msgbox(Training_NotEnoughPoints, MSGBOX_DEFAULT)
	setvar(VAR_POKECENTER_TRAINING, 0)
	release
	end
}
script LevelTrainingMain{
	special(ShowBattlePointsWindow)
	switch(var(VAR_POKECENTER_TRAINING)){
		case 1:									// Primrose Town
			buffernumberstring(STR_VAR_3, 6)			// Level of team
			buffernumberstring(STR_VAR_2, 11)			// Recommended level
		case 2:									// Coralgrove City & Azuretide Town
			buffernumberstring(STR_VAR_3, 8)
			buffernumberstring(STR_VAR_2, 13)									
		case 3:									// Aldeleaf City
			buffernumberstring(STR_VAR_3, 16)
			buffernumberstring(STR_VAR_2, 21)
		case 4:									// Shoreslate City
			buffernumberstring(STR_VAR_3, 25)
			buffernumberstring(STR_VAR_2, 28)
		case 5:									// Marigorge Town & Kaolisle City
			buffernumberstring(STR_VAR_3, 30)
			buffernumberstring(STR_VAR_2, 33)
		case 6:									// Rockliffe Town
			buffernumberstring(STR_VAR_3, 30)
			buffernumberstring(STR_VAR_2, 33)
		case 7:									// Sandstone City
			buffernumberstring(STR_VAR_3, 33)
			buffernumberstring(STR_VAR_2, 37)
		case 8:
			buffernumberstring(STR_VAR_3, 40)
			buffernumberstring(STR_VAR_2, 44)
	}
    msgbox(RecommendedLevel, MSGBOX_YESNO)
	if(var(VAR_RESULT) == YES){
		switch(var(VAR_POKECENTER_TRAINING)){
			case 1:
				checkpartylevel(12)
			case 2:
				checkpartylevel(14)
			case 3:
				checkpartylevel(22)
			case 4:
				checkpartylevel(29)
			case 5:
				checkpartylevel(34)
			case 6:
				checkpartylevel(34)
			case 7:
				checkpartylevel(38)
			case 8:
				checkpartylevel(45)
		}
		if(var(VAR_RESULT) == PARTY_SIZE){
			msgbox(YourPokemonIsAboveLevel, MSGBOX_YESNO)
			if(var(VAR_RESULT) == FALSE){
				setvar(VAR_POKECENTER_TRAINING, 0)
				release
				special(CloseBattlePointsWindow)
				end
			}
		}
		special(CloseBattlePointsWindow)
		copyvar(VAR_0x8004, VAR_0x8008)
		special(TakeFrontierBattlePoints)
		switch(var(VAR_POKECENTER_TRAINING)){
			case 1:
				trainerbattle_no_intro(TRAINER_DUSTY_1, TrainingFinished)
			case 2:
				trainerbattle_no_intro(TRAINER_GABBY_AND_TY_2, TrainingFinished)
			case 3:
				trainerbattle_no_intro(TRAINER_RANDALL, TrainingFinished)
			case 4:
				trainerbattle_no_intro(TRAINER_SHORESLATE_NURSE, TrainingFinished)
			case 5:
				trainerbattle_no_intro(TRAINER_MARIGORGE_NURSE, TrainingFinished)
			case 6:
				trainerbattle_no_intro(TRAINER_ROCKLIFFE_NURSE, TrainingFinished)
			case 7:
				trainerbattle_no_intro(TRAINER_SANDSTONE_NURSE, TrainingFinished)
			case 8:
				trainerbattle_no_intro(TRAINER_DRISLEDGE_NURSE, TrainingFinished)
		}
		setvar(VAR_POKECENTER_TRAINING, 0)
		end
	}
	else{
		setvar(VAR_POKECENTER_TRAINING, 0)
		special(CloseBattlePointsWindow)
		release
		end
	}
}

script IvTrainingIntro{
	if(!flag(FLAG_CORAL_FLAG_1)){
		msgbox(OldaleTown_PokemonCenter_1F_Text_Train, MSGBOX_NPC)
		end
	}
	lock
	msgbox(WelcomeToTrainingClub)
	goto(TrainingClubNpc)
}
script TrainingClubNpc{
	message(TrainingClubMessage)
	waitmessage
	dynmultipush("EV Training", 0)
	dynmultipush("Level Training", 1)
	dynmultipush("Nevermind", 2)
	dynmultistack(23, 0, FALSE, 3, FALSE, 0, NULL)
	switch(var(VAR_RESULT)){
		case 0:
			goto(EVTrainingDescription)
		case 1:
			goto(LevelTrainingDescription)
		case 2:
			goto(TrainingClubGoodbye)
		case MULTI_B_PRESSED:
			goto(TrainingClubGoodbye)
	}
}

text WelcomeToTrainingClub{
	"Hello, and welcome to the\n"
	"Pokémon Center PokéTraining Club.\p"
	"Here trainers may train their Pokémon\n"
	"by battling in a controlled environment."
}

text TrainingClubMessage{
	"Would you like to know more about\n"
	"our services?"
}

script EVTrainingDescription{
	msgbox(EVTrainingDescription_Text)
	goto(TrainingClubNpc)
}
script LevelTrainingDescription{
	msgbox(LevelTrainingDescription_Text)
	goto(TrainingClubNpc)
}
script TrainingClubGoodbye{
	msgbox(TrainingClubGoodbye_Text)
	release
}
text EVTrainingDescription_Text{
	"The person to my left offers\n"
	"EV training.\p"
	"She has 5 training bots, with each\n"
	"granting 10 EV in the specified stat.\p"
	"The cost of this service and the\n"
	"quality of the bots is consistent\l"
	"between every training club, so you're\l"
	"free to use the service as you see fit."
}
text LevelTrainingDescription_Text{
	"The person to my right offers\n"
	"level training, employing a team\l"
	"of bots that are tuned for quickly\l"
	"training your weaker party members.\p"
	"Do note that the level of the robots\n"
	"may vary between training clubs,\l"
	"and the higher the level, the costlier\l"
	"the training will become.\p"
	"Every training club also has a limit\n"
	"on how far it is able to train your\l"
	"Pokémon, so you may need to visit\l"
	"another training club to progress."
}
text TrainingClubGoodbye_Text{
	"I hope you find our services useful."
}