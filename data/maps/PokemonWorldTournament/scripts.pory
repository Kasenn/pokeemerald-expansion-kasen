mapscripts PokemonWorldTournament_MapScripts {}

raw`@hasMoveTutor` // if P_LEARNSET_HELPER_TEACHABLE is set to TRUE, adding this line makes the python script recognize the file and
                   // add any moves found in this file automatically.

script BP_Mart_MoveTutor{
    lock
    faceplayer
    message(BP_Mart_Moves)
    waitmessage
    bpmart(BP_Mart_Moves, TRUE)     // TRUE for move tutor, FALSE for item shop
    // if(var(VAR_RESULT) == FALSE){   // VAR_RESULT is set to TRUE if successfully teaching a move to a mon, FALSE otherwise
    //     msgbox(PleaseSaveSomeBp)
    // }
    // else{
    //     msgbox(IllTakeYourBPNow)
    // }
    release
}

mart BP_Mart_Moves{
    MOVE_THUNDER_PUNCH
    MOVE_FIRE_PUNCH
    MOVE_ICE_PUNCH
    MOVE_DRAIN_PUNCH
    MOVE_KNOCK_OFF
    MOVE_SUPER_FANG
    MOVE_DUAL_CHOP
    MOVE_ENDEAVOR
    MOVE_NONE
}

script BP_Mart_ItemShop{
    lock
    faceplayer
    message(BP_Mart_Moves)
    waitmessage
    bpmart(BP_Mart_Items, FALSE)    // TRUE for move tutor, FALSE for item shop
    msgbox(BP_Mart_Moves)
    release
}

mart BP_Mart_Items{
    ITEM_TOXIC_ORB
    ITEM_FLAME_ORB
    ITEM_IRON_BALL
    ITEM_RING_TARGET
    ITEM_WHITE_HERB
    ITEM_MENTAL_HERB
    ITEM_POWER_HERB
    ITEM_FOCUS_SASH
    ITEM_AIR_BALLOON
    ITEM_RED_CARD
    ITEM_EJECT_BUTTON
    ITEM_NONE
}

script TestDir{
    lock
    switch(var(VAR_FACING)){
        case DIR_NORTH:
            msgbox("facing north")
        case DIR_WEST:
            msgbox("facing west")
        case DIR_EAST:
            msgbox("facing east")
        case DIR_SOUTH:
            msgbox("facing south")
    }
    release
}

// mapscripts TestMap_MapScripts{
//     MAP_SCRIPT_ON_TRANSITION: RandomizeWarp
// }

// script RandomizeWarp{
//     random(3)
//     copyvar(VAR_TEMP_1, VAR_RESULT)
// }

// script WarpTile1{
//     if(var(VAR_TEMP_1) == 0){
//         warpteleport()  // correct warp
//     }
//     else{
//         warpteleport()  // wrong warp
//     }
// }

// script WarpTile2{
//     if(var(VAR_TEMP_1) == 1){
//         warpteleport()  // correct warp
//     }
//     else{
//         warpteleport()  // wrong warp
//     }
// }

// script WarpTile3{
//     if(var(VAR_TEMP_1) == 2){
//         warpteleport()  // correct warp
//     }
//     else{
//         warpteleport()  // wrong warp
//     }
// }

// script WarpTile4{
//     if(var(VAR_TEMP_1) == 3){
//         warpteleport()  // correct warp
//     }
//     else{
//         warpteleport()  // wrong warp
//     }
// }

script DebugGuy{
    lock
    faceplayer
    msgbox(EnableMoveInfo, MSGBOX_YESNO)
    if(var(VAR_RESULT) == FALSE){
        clearflag(FLAG_TEMP_1)
        clearflag(FLAG_TEMP_2)
        msgbox(BasicMenu)
        release
        end
    }
    setflag(FLAG_TEMP_1)
    msgbox(EnableContestInfo, MSGBOX_YESNO)
    if(var(VAR_RESULT) == FALSE){
        clearflag(FLAG_TEMP_2)
        msgbox(MoveInfoEnabled)
        release
        end
    }
    setflag(FLAG_TEMP_2)
    msgbox(EverythingEnabled)
    release
}

text EnableMoveInfo{
    "Enable move info window?"
}
text BasicMenu{
    "Move Tutor set to default."
}
text EnableContestInfo{
    "Enable contest move info?"
}
text MoveInfoEnabled{
    "Move Tutor set to show\n"
    "basic move info."
}
text EverythingEnabled{
    "Move Tutor set to show\n"
    "all move info."
}