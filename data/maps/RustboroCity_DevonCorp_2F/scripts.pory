mapscripts RustboroCity_DevonCorp_2F_MapScripts{
    MAP_SCRIPT_ON_TRANSITION: RustboroCity_DevonCorp_2F_OnTransition
}

script RustboroCity_DevonCorp_2F_OnTransition{
    call_if_eq(VAR_FOSSIL_RESURRECTION_STATE, 1, RustboroCity_DevonCorp_2F_EventScript_SetFossilReady)
	end
}
script RustboroCity_DevonCorp_2F_EventScript_SetFossilReady{
    setvar(VAR_FOSSIL_RESURRECTION_STATE, 2)
	return
}
	

script RustboroCity_DevonCorp_2F_EventScript_TalkToPokemonScientist{
	call_if_eq(VAR_FOSSIL_RESURRECTION_STATE, 1, RustboroCity_DevonCorp_2F_EventScript_SetFossilReady)
	if(!flag(FLAG_DEVON_RESCUED)){
		msgbox(ResearchIntact, MSGBOX_NPC)
		end
	}
	msgbox(RustboroCity_DevonCorp_2F_Text_DeviceForTalkingToPokemon, MSGBOX_NPC)
	end
}
text ResearchIntact{
	"Luckily much of my research is\n"
	"still intact.\l"
	"Pays to have external backups!"
}
text RustboroCity_DevonCorp_2F_Text_DeviceForTalkingToPokemon{
	"We're developing a device for talking\n"
	"with Pokémon.\p"
	"But we haven't had much success…"
}
script RustboroCity_DevonCorp_2F_EventScript_Betrayed{
	call_if_eq(VAR_FOSSIL_RESURRECTION_STATE, 1, RustboroCity_DevonCorp_2F_EventScript_SetFossilReady)
	msgbox(RustboroCity_DevonCorp_2F_Text_Betrayed, MSGBOX_NPC)
	end
}
text RustboroCity_DevonCorp_2F_Text_Betrayed{
	"I can't believe the person I worked\n"
    "with all these years turned out to be\l"
    "a Team Rocket spy…"
}
script RustboroCity_DevonCorp_2F_EventScript_MedicineScientist{
	call_if_eq(VAR_FOSSIL_RESURRECTION_STATE, 1, RustboroCity_DevonCorp_2F_EventScript_SetFossilReady)
	if(!flag(FLAG_DEVON_RESCUED)){
		msgbox(ResearchDestroyed, MSGBOX_NPC)
		end
	}
	msgbox(RustboroCity_DevonCorp_2F_Text_DevelopNewMedicine, MSGBOX_NPC)
	end
}
text RustboroCity_DevonCorp_2F_Text_DevelopNewMedicine{
	"I'm trying to develop a new medicine\n"
	"to increase the individual values\l"
    "of a Pokémon…\p"
	"But it's not going well."
}
text ResearchDestroyed{
	"Much of my research got stolen…\n"
	"Why would Team Rocket do something\l"
	"like this?"
}
script RustboroCity_DevonCorp_2F_EventScript_PokemonDreamsScientist{
	call_if_eq(VAR_FOSSIL_RESURRECTION_STATE, 1, RustboroCity_DevonCorp_2F_EventScript_SetFossilReady)
	if(!flag(FLAG_DEVON_RESCUED)){
		msgbox(NotLettingDown, MSGBOX_NPC)
		end
	}
	msgbox(RustboroCity_DevonCorp_2F_Text_DeviceToVisualizePokemonDreams, MSGBOX_NPC)
	end
}
text RustboroCity_DevonCorp_2F_Text_DeviceToVisualizePokemonDreams{
	"I'm trying to develop a device that\n"
	"visually reproduces the dreams of\l"
	"Pokémon…\p"
	"But it's not going well."
}
text NotLettingDown{
	"I'm not letting a minor setback\n"
	"like this impede my research!\p"
	"I'm trying to develop a device that\n"
	"visually reproduces the dreams of\l"
	"Pokémon…\p"
	"But it's not going well."
}



script RustboroCity_DevonCorp_2F_EventScript_FossilScientist{
	if(!flag(FLAG_DEVON_RESCUED)){
		msgbox(FossilResearchAMess, MSGBOX_NPC)
		end
	}
	lock
	faceplayer
	goto_if_eq(VAR_FOSSIL_RESURRECTION_STATE, 2, RustboroCity_DevonCorp_2F_EventScript_FossilMonReady)
	goto_if_eq(VAR_FOSSIL_RESURRECTION_STATE, 1, RustboroCity_DevonCorp_2F_EventScript_StillRegenerating)
	msgbox(RustboroCity_DevonCorp_2F_Text_DevelopDeviceToResurrectFossils, MSGBOX_DEFAULT)
	checkitem(ITEM_ROOT_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, RustboroCity_DevonCorp_2F_EventScript_NoticeRootFossil)
	checkitem(ITEM_CLAW_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, RustboroCity_DevonCorp_2F_EventScript_NoticeClawFossil)
	release
	end
}
text FossilResearchAMess{
	"All of my fossil research is\n"
	"in shambles.\l"
	"How am I meant to sort this out…"
}

// This whole section has needless duplication and could be condensed considerably
script RustboroCity_DevonCorp_2F_EventScript_NoticeRootFossil{
	closemessage
	playse(SE_PIN)
	applymovement(4, Common_Movement_ExclamationMark)
	waitmovement(0)
	applymovement(4, Common_Movement_Delay48)
	waitmovement(0)
	msgbox(RustboroCity_DevonCorp_2F_Text_WantToBringFossilBackToLife, MSGBOX_YESNO)
	goto_if_eq(VAR_RESULT, NO, RustboroCity_DevonCorp_2F_EventScript_DeclineGiveFossil)
	checkitem(ITEM_CLAW_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, RustboroCity_DevonCorp_2F_EventScript_ChooseFossil)
	goto(RustboroCity_DevonCorp_2F_EventScript_GiveRootFossil)
	end
}

script RustboroCity_DevonCorp_2F_EventScript_GiveRootFossil{
	bufferitemname(STR_VAR_1, ITEM_ROOT_FOSSIL)
	msgbox(RustboroCity_DevonCorp_2F_Text_HandedFossilToResearcher, MSGBOX_DEFAULT)
	removeitem(ITEM_ROOT_FOSSIL)
	setvar(VAR_FOSSIL_RESURRECTION_STATE, 1)
	setvar(VAR_WHICH_FOSSIL_REVIVED, 1)
	release
	end
}

script RustboroCity_DevonCorp_2F_EventScript_NoticeClawFossil{
	closemessage
	playse(SE_PIN)
	applymovement(4, Common_Movement_ExclamationMark)
	waitmovement(0)
	applymovement(4, Common_Movement_Delay48)
	waitmovement(0)
	msgbox(RustboroCity_DevonCorp_2F_Text_WantToBringFossilBackToLife, MSGBOX_YESNO)
	goto_if_eq(VAR_RESULT, NO, RustboroCity_DevonCorp_2F_EventScript_DeclineGiveFossil)
	checkitem(ITEM_ROOT_FOSSIL)
	goto_if_eq(VAR_RESULT, TRUE, RustboroCity_DevonCorp_2F_EventScript_ChooseFossil)
	goto(RustboroCity_DevonCorp_2F_EventScript_GiveClawFossil)
	end
}

script RustboroCity_DevonCorp_2F_EventScript_GiveClawFossil{
	bufferitemname(STR_VAR_1, ITEM_CLAW_FOSSIL)
	msgbox(RustboroCity_DevonCorp_2F_Text_HandedFossilToResearcher, MSGBOX_DEFAULT)
	removeitem(ITEM_CLAW_FOSSIL)
	setvar(VAR_FOSSIL_RESURRECTION_STATE, 1)
	setvar(VAR_WHICH_FOSSIL_REVIVED, 2)
	release
	end
}

script RustboroCity_DevonCorp_2F_EventScript_DeclineGiveFossil{
	msgbox(RustboroCity_DevonCorp_2F_Text_OhIsThatSo, MSGBOX_DEFAULT)
	release
	end
}

script RustboroCity_DevonCorp_2F_EventScript_StillRegenerating{
	msgbox(RustboroCity_DevonCorp_2F_Text_FossilRegeneratorTakesTime, MSGBOX_DEFAULT)
	release
	end
}

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
script RustboroCity_DevonCorp_2F_EventScript_FossilMonReady{
	switch(var(VAR_WHICH_FOSSIL_REVIVED)){
		case 1: goto(OmanyteReady)
		case 2: goto(KabutoReady)
		case 3: goto(AerodactylReady)
		case 4: goto(LileepReady)
		case 5: goto(AnorithReady)
		case 6: goto(CranidosReady)
		case 7: goto(ShieldonReady)
		case 8: goto(TirtougaReady)
		case 9: goto(ArchenReady)
		case 10: goto(TyruntReady)
		case 11: goto(AmauraReady)
	}
	end
}
text FossilBroughtBackToLife{
	"Thanks for waiting!\p"
	"Your fossilized Pokémon has been\n"
	"brought back to life!\p"
	"The fossil was an ancient Pokémon.\n"
	"{STR_VAR_2}, it was!"
}
text ReceivedMonFromResearcher{
	"{PLAYER} received {STR_VAR_2} from\n"
	"the Devon researcher."
}
///////////////////////////////////////////////////////////////////////////
script OmanyteReady{
    bufferspeciesname(STR_VAR_2, SPECIES_OMANYTE)
    msgbox(FossilBroughtBackToLife, MSGBOX_DEFAULT)
    setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_OMANYTE)
    givemon(SPECIES_OMANYTE, 20)
	bufferspeciesname(STR_VAR_1, SPECIES_OMANYTE)
	call(ReceivedFossilMonFanfare)
    if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
        goto(ReceiveFossilParty)
    }
    if(var(VAR_RESULT) == MON_GIVEN_TO_PC){
        goto(ReceiveFossilPC)
    }
    goto(Common_EventScript_NoMoreRoomForPokemon)
    end
}
///////////////////////////////////////////////////////////////////////////
script KabutoReady{
    bufferspeciesname(STR_VAR_2, SPECIES_KABUTO)
    msgbox(FossilBroughtBackToLife, MSGBOX_DEFAULT)
    setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_KABUTO)
    givemon(SPECIES_KABUTO, 20)
	bufferspeciesname(STR_VAR_1, SPECIES_KABUTO)
	call(ReceivedFossilMonFanfare)
    if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
        goto(ReceiveFossilParty)
    }
    if(var(VAR_RESULT) == MON_GIVEN_TO_PC){
        goto(ReceiveFossilPC)
    }
    goto(Common_EventScript_NoMoreRoomForPokemon)
    end
}
///////////////////////////////////////////////////////////////////////////
script AerodactylReady{
    bufferspeciesname(STR_VAR_2, SPECIES_AERODACTYL)
    msgbox(FossilBroughtBackToLife, MSGBOX_DEFAULT)
    setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_AERODACTYL)
    givemon(SPECIES_AERODACTYL, 20)
	bufferspeciesname(STR_VAR_1, SPECIES_AERODACTYL)
	call(ReceivedFossilMonFanfare)
    if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
        goto(ReceiveFossilParty)
    }
    if(var(VAR_RESULT) == MON_GIVEN_TO_PC){
        goto(ReceiveFossilPC)
    }
    goto(Common_EventScript_NoMoreRoomForPokemon)
    end
}
///////////////////////////////////////////////////////////////////////////
script LileepReady{
	bufferspeciesname(STR_VAR_2, SPECIES_LILEEP)
	msgbox(FossilBroughtBackToLife, MSGBOX_DEFAULT)
	setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_LILEEP)
	givemon(SPECIES_LILEEP, 20)
	bufferspeciesname(STR_VAR_1, SPECIES_LILEEP)
	call(ReceivedFossilMonFanfare)
	if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
		goto(ReceiveFossilParty)
	}
	if(var(VAR_RESULT) == MON_GIVEN_TO_PC){
		goto(ReceiveFossilPC)
	}
	goto(Common_EventScript_NoMoreRoomForPokemon)
	end
}
///////////////////////////////////////////////////////////////////////////
script AnorithReady{
    bufferspeciesname(STR_VAR_2, SPECIES_ANORITH)
    msgbox(FossilBroughtBackToLife, MSGBOX_DEFAULT)
    setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_ANORITH)
    givemon(SPECIES_ANORITH, 20)
	bufferspeciesname(STR_VAR_1, SPECIES_ANORITH)
	call(ReceivedFossilMonFanfare)
    if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
        goto(ReceiveFossilParty)
    }
    if(var(VAR_RESULT) == MON_GIVEN_TO_PC){
        goto(ReceiveFossilPC)
    }
    goto(Common_EventScript_NoMoreRoomForPokemon)
    end
}
///////////////////////////////////////////////////////////////////////////
script CranidosReady{
    bufferspeciesname(STR_VAR_2, SPECIES_CRANIDOS)
    msgbox(FossilBroughtBackToLife, MSGBOX_DEFAULT)
    setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_CRANIDOS)
    givemon(SPECIES_CRANIDOS, 20)
	bufferspeciesname(STR_VAR_1, SPECIES_CRANIDOS)
	call(ReceivedFossilMonFanfare)
    if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
        goto(ReceiveFossilParty)
    }
    if(var(VAR_RESULT) == MON_GIVEN_TO_PC){
        goto(ReceiveFossilPC)
    }
    goto(Common_EventScript_NoMoreRoomForPokemon)
    end
}
///////////////////////////////////////////////////////////////////////////
script ShieldonReady{
    bufferspeciesname(STR_VAR_2, SPECIES_SHIELDON)
    msgbox(FossilBroughtBackToLife, MSGBOX_DEFAULT)
    setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_SHIELDON)
    givemon(SPECIES_SHIELDON, 20)
	bufferspeciesname(STR_VAR_1, SPECIES_SHIELDON)
	call(ReceivedFossilMonFanfare)
    if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
        goto(ReceiveFossilParty)
    }
    if(var(VAR_RESULT) == MON_GIVEN_TO_PC){
        goto(ReceiveFossilPC)
    }
    goto(Common_EventScript_NoMoreRoomForPokemon)
    end
}
///////////////////////////////////////////////////////////////////////////
script TirtougaReady{
    bufferspeciesname(STR_VAR_2, SPECIES_TIRTOUGA)
    msgbox(FossilBroughtBackToLife, MSGBOX_DEFAULT)
    setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_TIRTOUGA)
    givemon(SPECIES_TIRTOUGA, 20)
	bufferspeciesname(STR_VAR_1, SPECIES_TIRTOUGA)
	call(ReceivedFossilMonFanfare)
    if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
        goto(ReceiveFossilParty)
    }
    if(var(VAR_RESULT) == MON_GIVEN_TO_PC){
        goto(ReceiveFossilPC)
    }
    goto(Common_EventScript_NoMoreRoomForPokemon)
    end
}
///////////////////////////////////////////////////////////////////////////
script ArchenReady{
    bufferspeciesname(STR_VAR_2, SPECIES_ARCHEN)
    msgbox(FossilBroughtBackToLife, MSGBOX_DEFAULT)
    setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_ARCHEN)
    givemon(SPECIES_ARCHEN, 20)
	bufferspeciesname(STR_VAR_1, SPECIES_ARCHEN)
	call(ReceivedFossilMonFanfare)
    if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
        goto(ReceiveFossilParty)
    }
    if(var(VAR_RESULT) == MON_GIVEN_TO_PC){
        goto(ReceiveFossilPC)
    }
    goto(Common_EventScript_NoMoreRoomForPokemon)
    end
}
///////////////////////////////////////////////////////////////////////////
script TyruntReady{
    bufferspeciesname(STR_VAR_2, SPECIES_TYRUNT)
    msgbox(FossilBroughtBackToLife, MSGBOX_DEFAULT)
    setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_TYRUNT)
    givemon(SPECIES_TYRUNT, 20)
	bufferspeciesname(STR_VAR_1, SPECIES_TYRUNT)
	call(ReceivedFossilMonFanfare)
    if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
        goto(ReceiveFossilParty)
    }
    if(var(VAR_RESULT) == MON_GIVEN_TO_PC){
        goto(ReceiveFossilPC)
    }
    goto(Common_EventScript_NoMoreRoomForPokemon)
    end
}
///////////////////////////////////////////////////////////////////////////
script AmauraReady{
    bufferspeciesname(STR_VAR_2, SPECIES_AMAURA)
    msgbox(FossilBroughtBackToLife, MSGBOX_DEFAULT)
    setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_AMAURA)
    givemon(SPECIES_AMAURA, 20)
	bufferspeciesname(STR_VAR_1, SPECIES_AMAURA)
	call(ReceivedFossilMonFanfare)
    if(var(VAR_RESULT) == MON_GIVEN_TO_PARTY){
        goto(ReceiveFossilParty)
    }
    if(var(VAR_RESULT) == MON_GIVEN_TO_PC){
        goto(ReceiveFossilPC)
    }
    goto(Common_EventScript_NoMoreRoomForPokemon)
    end
}
///////////////////////////////////////////////////////////////////////////
script ReceiveFossilParty{
	msgbox(gText_NicknameThisPokemon, MSGBOX_YESNO)
	goto_if_eq(VAR_RESULT, NO, FinishReceivingFossilMon)
	call(Common_EventScript_GetGiftMonPartySlot)
	call(Common_EventScript_NameReceivedPartyMon)
	goto(FinishReceivingFossilMon)
	end
}
script ReceiveFossilPC{
	msgbox(gText_NicknameThisPokemon, MSGBOX_YESNO)
	if(var(VAR_RESULT) == FALSE){
		call(Common_EventScript_TransferredToPC)
		goto(FinishReceivingFossilMon)
	}
	call(Common_EventScript_NameReceivedBoxMon)
	call(Common_EventScript_TransferredToPC)
	goto(FinishReceivingFossilMon)
	end
}
script FinishReceivingFossilMon{
	setvar(VAR_FOSSIL_RESURRECTION_STATE, 0)
	setflag(FLAG_RECEIVED_REVIVED_FOSSIL_MON)
	release
	end
}
script ReceivedFossilMonFanfare{
    playfanfare(MUS_OBTAIN_ITEM)
    message(ReceivedMonFromResearcher)
    waitmessage
    waitfanfare
    return
}
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////



script RustboroCity_DevonCorp_2F_EventScript_ChooseFossil{
	message(RustboroCity_DevonCorp_2F_Text_TwoFossilsPickOne)
	waitmessage
	multichoice(17, 6, MULTI_FOSSIL, FALSE)
	switch(var(VAR_RESULT)){
	case 0:
		goto(RustboroCity_DevonCorp_2F_EventScript_GiveClawFossil)
	case 1:
		goto(RustboroCity_DevonCorp_2F_EventScript_GiveRootFossil)
	default:
		release
		end
    }
	end
}

text RustboroCity_DevonCorp_2F_Text_DevelopDeviceToResurrectFossils{
	"I've been trying to develop a device\n"
	"that resurrects Pokémon from fossils…\p"
	"And, it's working!"
}

text RustboroCity_DevonCorp_2F_Text_WantToBringFossilBackToLife{
	"Wait! That thing you have there…\n"
	"Is that a POKéMON fossil?\p"
	"Would you like to bring that POKéMON\n"
	"back to life?\p"
	"I can with my newly developed\n"
	"FOSSIL REGENERATOR."
}

text RustboroCity_DevonCorp_2F_Text_OhIsThatSo{
	"Oh, is that so?\p"
	"DEVON's technological expertise\n"
	"is outstanding, I tell you."
}

text RustboroCity_DevonCorp_2F_Text_TwoFossilsPickOne{
	"Oh, now that's a surprise!\n"
	"You have not one, but two, fossils?\p"
	"Unfortunately, my machine can only\n"
	"regenerate one POKéMON at a time.\p"
	"Would you like to pick one of your\n"
	"fossils for regeneration?"
}

text RustboroCity_DevonCorp_2F_Text_HandedFossilToResearcher{
	"Excellent!\n"
	"Let's do this right away.\p"
	"{PLAYER} handed the {STR_VAR_1} to\n"
	"the Devon researcher."
}

text RustboroCity_DevonCorp_2F_Text_FossilRegeneratorTakesTime{
	"The FOSSIL REGENERATOR, which I made,\n"
	"is incredible.\p"
	"But it has one drawback--it takes\n"
	"a long time to work.\p"
	"So, uh… How about you go for a stroll\n"
	"and look around for a while?"
}




