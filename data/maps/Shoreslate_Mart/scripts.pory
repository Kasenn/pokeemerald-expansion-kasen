mapscripts Shoreslate_Mart_MapScripts{}

script Shoreslate_Mart_Secret{
    lockall
    msgbox(Shoreslate_Mart_Secret_Text_Beginning, MSGBOX_YESNO)
    if(var(VAR_RESULT) == TRUE){
        msgbox(Shoreslate_Mart_Secret_Text, MSGBOX_YESNO)
        if(var(VAR_RESULT) == FALSE){
            release
            end
        }
        if(var(VAR_RESULT) == TRUE){
            msgbox(Shoreslate_Mart_Secret_Text_2, MSGBOX_YESNO)
            if(var(VAR_RESULT) == FALSE){
                release
                end
            }
            if(var(VAR_RESULT) == TRUE){
                msgbox(Shoreslate_Mart_Secret_Text_3, MSGBOX_YESNO)
                if(var(VAR_RESULT) == FALSE){
                    release
                    end
                }
                if(var(VAR_RESULT) == TRUE){
                    msgbox(Shoreslate_Mart_Secret_Text_4, MSGBOX_DEFAULT)
                    finditem(ITEM_MASTER_BALL)
                }
            }
        }
    }
    if(var(VAR_RESULT) == FALSE){
        release
        end
    }
}

text Shoreslate_Mart_Secret_Text_Beginning{
    "There's a note attached to this item.\n"
    "Would you like to read it?"
}

text Shoreslate_Mart_Secret_Text{
    "The missile knows where it is at\n"
    "all times. It knows this because\l"
    "it knows where it isn't.\p"
    "By subtracting where it is from where\n"
    "it isn't, or where it isn't from\l"
    "where it is (whichever is greater),\l"
    "it obtains a difference, or deviation.\l"
    "Would you like to continue reading?"
}

text Shoreslate_Mart_Secret_Text_2{
    "The guidance subsystem uses deviations\n"
    "to generate corrective commands\l"
    "to drive the missile from a position\l"
    "where it is to a position where it\l"
    "isn't, and arriving at a position\l"
    "where it wasn't, it now is.\p"
    "Consequently, the position where it is,\n"
    "is now the position that it wasn't,\l"
    "and it follows that the position\l"
    "that it was, is now the position\l"
    "that it isn't.\l"
    "Would you like to continue reading?"
}

text Shoreslate_Mart_Secret_Text_3{
    "In the event that the position that\n"
    "it is in is not the position that\l"
    "it wasn't, the system has acquired\l"
    "a variation, the variation being\l"
    "the difference between where the\l"
    "missile is, and where it wasn't.\p"
    "If variation is considered to be a\n"
    "significant factor, it too may be\l"
    "corrected by the GEA.\p"
    "However, the missile must also know\n"
    "where it was.\l"
    "Would you like to continue reading?"
}

text Shoreslate_Mart_Secret_Text_4{
    "The missile guidance computer scenario\n"
    "works as follows.\p"
    "Because a variation has modified some\n"
    "of the information the missile has\l"
    "obtained, it is not sure just where\l"
    "it is.\p"
    "However, it is sure where it isn't,\n"
    "within reason, and it knows where\l"
    "it was.\p"
    "It now subtracts where it should be\n"
    "from where it wasn't, or vice-versa,\l"
    "and by differentiating this from the\l"
    "algebraic sum of where it shouldn't be,\l"
    "and where it was, it is able to obtain\l"
    "the deviation and its variation,\l"
    "which is called error.\p"
    "Thank you for coming to my TED talk.\p"
    "You may now devour me."
}

script Shoreslate_Mart_EventScript_Clerk2{
	lock
	faceplayer
	message(gText_HowMayIServeYou2)
	waitmessage
	pokemart(Shoreslate_Mart_Pokemart2)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
	end
}
script Shoreslate_Mart_EventScript_Clerk3{
	lock
	faceplayer
	message(gText_HowMayIServeYou3)
	waitmessage
	pokemart(Shoreslate_Mart_Pokemart3)
	msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
	end
}
script Shoreslate_AppleMerchant{
    lock
    faceplayer
    message(gText_FreshApples)
    waitmessage
    pokemart(Shoreslate_AppleMerchant_Shop)
    msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
	end
}
text gText_FreshApples{
    "Fresh apples for sale!"
}

mart Shoreslate_AppleMerchant_Shop{
    ITEM_SWEET_APPLE
    ITEM_TART_APPLE
    ITEM_NONE
}

mart Shoreslate_Mart_Pokemart2{
    ITEM_X_ACCURACY
    ITEM_X_ATTACK
    ITEM_X_DEFENSE
    ITEM_X_SP_ATK
    ITEM_X_SP_DEF
    ITEM_X_SPEED
    ITEM_GUARD_SPEC
    ITEM_DIRE_HIT
	ITEM_NONE
}
mart Shoreslate_Mart_Pokemart3{
    ITEM_NET_BALL
    ITEM_DIVE_BALL
    ITEM_NEST_BALL
    ITEM_REPEAT_BALL
    ITEM_HEAL_BALL
    ITEM_DREAM_BALL
	ITEM_NONE
}

script Shoreslate_Mart_EventScript_Woman{
	msgbox(Shoreslate_Mart_EventScript_Woman_Text, MSGBOX_NPC)
	end
}
script Shoreslate_Mart_EventScript_Man{
	msgbox(Shoreslate_Mart_EventScript_Man_Text, MSGBOX_NPC)
	end
}
text Shoreslate_Mart_EventScript_Woman_Text{
	"The market is great, but there are some\n"
    "daily necessities you can only get\l"
    "at a Poké Mart."
}
text Shoreslate_Mart_EventScript_Man_Text{
	"I wanted to get some escape ropes but\n"
    "I can't see them anywhere.\l"
    "Where are they?"
}

text gText_HowMayIServeYou2{
    "Combat items for sale!\n"
    "Come get your own!"
}

text gText_HowMayIServeYou3{
    "I've got a selection of interesting\n"
    "Poké Balls. Take a look!"
}

text gText_HowMayIServeYou4{
    "You've never seen these things before!\n"
    "My prices are incense!"
}

script Kaolisle_Mart_Gentleman{
    msgbox(Kaolisle_Mart_Gentleman_Text, MSGBOX_NPC)
    end
}
text Kaolisle_Mart_Gentleman_Text{
    "You can find mostly the same items\n"
    "in every Poké Mart across Sinko.\p"
    "By gaining more badges, you gain access\n"
    "to an ever wider assortment of products."
}

script Kaolisle_Mart_Boy{
    msgbox(Kaolisle_Mart_Boy_Text, MSGBOX_NPC)
    end
}
text Kaolisle_Mart_Boy_Text{
    "I can't find the products I'm\n"
    "looking for…"
}

script Mart_Clerk{
    lock
	faceplayer
	message(gText_HowMayIServeYou)
	waitmessage
    switch(var(VAR_BADGES_OBTAINED)){
        case 0:
            if(flag(FLAG_SYS_POKEDEX_GET)){
                pokemart(Mart_NoBadgesExpanded)
            }
            else{
                pokemart(Mart_NoBadges)
            }
        case 1:
            pokemart(Mart_1Badges)
        case 2:
            pokemart(Mart_2Badges)
        case 3:
            pokemart(Mart_3Badges)
        case 4:
            pokemart(Mart_4Badges)
        case 5:
            pokemart(Mart_4Badges)
        case 6:
            pokemart(Mart_7Badges)
        case 7:
            pokemart(Mart_7Badges)
        case 8:
            pokemart(Mart_8Badges)
    }
    msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
	end
}

mart Mart_NoBadges{
	ITEM_POTION
	ITEM_ANTIDOTE
	ITEM_NONE
}
mart Mart_NoBadgesExpanded{
	ITEM_POKE_BALL
	ITEM_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
	ITEM_NONE
}
mart Mart_1Badges{
    ITEM_POKE_BALL
    ITEM_GREAT_BALL
	ITEM_POTION
    ITEM_SUPER_POTION
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
    ITEM_AWAKENING
    ITEM_BURN_HEAL
    ITEM_ICE_HEAL
    ITEM_REPEL
	ITEM_NONE
}
mart Mart_2Badges{
    ITEM_POKE_BALL
    ITEM_GREAT_BALL
	ITEM_POTION
    ITEM_SUPER_POTION
    ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
    ITEM_AWAKENING
    ITEM_BURN_HEAL
    ITEM_ICE_HEAL
    ITEM_REPEL
	ITEM_NONE
}
mart Mart_3Badges{
    ITEM_POKE_BALL
    ITEM_GREAT_BALL
	ITEM_POTION
    ITEM_SUPER_POTION
    ITEM_HYPER_POTION
    ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
    ITEM_AWAKENING
    ITEM_BURN_HEAL
    ITEM_ICE_HEAL
    ITEM_REPEL
    ITEM_SUPER_REPEL
    ITEM_POKE_DOLL
	ITEM_NONE
}
mart Mart_4Badges{
    ITEM_POKE_BALL
    ITEM_GREAT_BALL
    ITEM_ULTRA_BALL
	ITEM_POTION
    ITEM_SUPER_POTION
    ITEM_HYPER_POTION
    ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
    ITEM_AWAKENING
    ITEM_BURN_HEAL
    ITEM_ICE_HEAL
    ITEM_FULL_HEAL
    ITEM_REPEL
    ITEM_SUPER_REPEL
    ITEM_MAX_REPEL
    ITEM_POKE_DOLL
	ITEM_NONE
}
mart Mart_7Badges{
    ITEM_POKE_BALL
    ITEM_GREAT_BALL
    ITEM_ULTRA_BALL
	ITEM_POTION
    ITEM_SUPER_POTION
    ITEM_HYPER_POTION
    ITEM_MAX_POTION
    ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
    ITEM_AWAKENING
    ITEM_BURN_HEAL
    ITEM_ICE_HEAL
    ITEM_FULL_HEAL
    ITEM_REPEL
    ITEM_SUPER_REPEL
    ITEM_MAX_REPEL
    ITEM_POKE_DOLL
	ITEM_NONE
}
mart Mart_8Badges{
    ITEM_POKE_BALL
    ITEM_GREAT_BALL
    ITEM_ULTRA_BALL
	ITEM_POTION
    ITEM_SUPER_POTION
    ITEM_HYPER_POTION
    ITEM_MAX_POTION
    ITEM_FULL_RESTORE
    ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
    ITEM_AWAKENING
    ITEM_BURN_HEAL
    ITEM_ICE_HEAL
    ITEM_FULL_HEAL
    ITEM_REPEL
    ITEM_SUPER_REPEL
    ITEM_MAX_REPEL
    ITEM_POKE_DOLL
	ITEM_NONE
}

script Rockliffe_TM_Mart_Clerk{
    lock
	faceplayer
	message(gText_HowMayIServeYou)
	waitmessage
    pokemart(Mart_TM1)
    msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
	end
}

mart Mart_TM1{
    ITEM_TM_FRUSTRATION
    ITEM_TM_RETURN
    ITEM_TM_LIGHT_SCREEN
    ITEM_TM_REFLECT
    ITEM_TM_SAFEGUARD
    ITEM_NONE
}

script Mart_ClerkSandStoneLeft{
    lock
	faceplayer
	message(gText_HowMayIServeYou)
	waitmessage
    switch(var(VAR_BADGES_OBTAINED)){
        case 3:
            pokemart(SSLeftMart_3Badges)
        case 4:
            pokemart(SSLeftMart_4Badges)
        case 5:
            pokemart(SSLeftMart_4Badges)
        case 6:
            pokemart(SSLeftMart_6Badges)
        case 7:
            pokemart(SSLeftMart_7Badges)
        case 8:
            pokemart(SSLeftMart_8Badges)
    }
    msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
	end
}

script Mart_ClerkSandStoneRight{
    lock
	faceplayer
	message(gText_HowMayIServeYou)
	waitmessage
    switch(var(VAR_BADGES_OBTAINED)){
        case 3:
            pokemart(SSRightMart_3Badges)
        case 4:
            pokemart(SSRightMart_4Badges)
        case 5:
            pokemart(SSRightMart_4Badges)
        case 6:
            pokemart(SSRightMart_7Badges)
        case 7:
            pokemart(SSRightMart_7Badges)
        case 8:
            pokemart(SSRightMart_8Badges)
    }
    msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
	end
}

mart SSLeftMart_3Badges{
    ITEM_POKE_BALL
    ITEM_GREAT_BALL
    ITEM_HEAL_BALL
    ITEM_NET_BALL
    ITEM_REPEAT_BALL
    ITEM_NEST_BALL
    ITEM_DIVE_BALL
    ITEM_DREAM_BALL
	ITEM_NONE
}
mart SSLeftMart_4Badges{
    ITEM_POKE_BALL
    ITEM_GREAT_BALL
    ITEM_ULTRA_BALL
    ITEM_HEAL_BALL
    ITEM_NET_BALL
    ITEM_REPEAT_BALL
    ITEM_NEST_BALL
    ITEM_DIVE_BALL
    ITEM_DREAM_BALL
    ITEM_LUXURY_BALL
	ITEM_NONE
}
mart SSLeftMart_6Badges{
    ITEM_POKE_BALL
    ITEM_GREAT_BALL
    ITEM_ULTRA_BALL
    ITEM_HEAL_BALL
    ITEM_NET_BALL
    ITEM_REPEAT_BALL
    ITEM_NEST_BALL
    ITEM_DIVE_BALL
    ITEM_DREAM_BALL
    ITEM_LUXURY_BALL
    ITEM_DUSK_BALL
	ITEM_NONE
}
mart SSLeftMart_7Badges{
    ITEM_POKE_BALL
    ITEM_GREAT_BALL
    ITEM_ULTRA_BALL
    ITEM_HEAL_BALL
    ITEM_NET_BALL
    ITEM_REPEAT_BALL
    ITEM_NEST_BALL
    ITEM_DIVE_BALL
    ITEM_DREAM_BALL
    ITEM_LUXURY_BALL
    ITEM_DUSK_BALL
    ITEM_QUICK_BALL
	ITEM_NONE
}
mart SSLeftMart_8Badges{
    ITEM_POKE_BALL
    ITEM_GREAT_BALL
    ITEM_ULTRA_BALL
    ITEM_HEAL_BALL
    ITEM_NET_BALL
    ITEM_REPEAT_BALL
    ITEM_NEST_BALL
    ITEM_DIVE_BALL
    ITEM_DREAM_BALL
    ITEM_LUXURY_BALL
    ITEM_DUSK_BALL
    ITEM_QUICK_BALL
    ITEM_TIMER_BALL
	ITEM_NONE
}

mart SSRightMart_3Badges{
	ITEM_POTION
    ITEM_SUPER_POTION
    ITEM_HYPER_POTION
    ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
    ITEM_AWAKENING
    ITEM_BURN_HEAL
    ITEM_ICE_HEAL
    ITEM_REPEL
    ITEM_SUPER_REPEL
    ITEM_POKE_DOLL
	ITEM_NONE
}
mart SSRightMart_4Badges{
	ITEM_POTION
    ITEM_SUPER_POTION
    ITEM_HYPER_POTION
    ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
    ITEM_AWAKENING
    ITEM_BURN_HEAL
    ITEM_ICE_HEAL
    ITEM_FULL_HEAL
    ITEM_REPEL
    ITEM_SUPER_REPEL
    ITEM_MAX_REPEL
    ITEM_POKE_DOLL
	ITEM_NONE
}
mart SSRightMart_7Badges{
	ITEM_POTION
    ITEM_SUPER_POTION
    ITEM_HYPER_POTION
    ITEM_MAX_POTION
    ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
    ITEM_AWAKENING
    ITEM_BURN_HEAL
    ITEM_ICE_HEAL
    ITEM_FULL_HEAL
    ITEM_REPEL
    ITEM_SUPER_REPEL
    ITEM_MAX_REPEL
    ITEM_POKE_DOLL
	ITEM_NONE
}
mart SSRightMart_8Badges{
	ITEM_POTION
    ITEM_SUPER_POTION
    ITEM_HYPER_POTION
    ITEM_MAX_POTION
    ITEM_FULL_RESTORE
    ITEM_REVIVE
	ITEM_ANTIDOTE
	ITEM_PARALYZE_HEAL
    ITEM_AWAKENING
    ITEM_BURN_HEAL
    ITEM_ICE_HEAL
    ITEM_FULL_HEAL
    ITEM_REPEL
    ITEM_SUPER_REPEL
    ITEM_MAX_REPEL
    ITEM_POKE_DOLL
	ITEM_NONE
}

script StoneMart_ClerkLeft{
    lock
	faceplayer
	message(gText_HowMayIServeYou)
	waitmessage
    pokemart(Mart_Stones1)
    msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
	end
}
mart Mart_Stones1{
    ITEM_SHINY_STONE
    ITEM_DUSK_STONE
    ITEM_DAWN_STONE
    ITEM_ICE_STONE
    ITEM_NONE
}
script StoneMart_ClerkRight{
    lock
	faceplayer
	message(gText_HowMayIServeYou)
	waitmessage
    if(var(VAR_SANDSTONEPORYGON_STATE) == 3){
        pokemart(Mart_NoAV)
    }
    else{
        pokemart(Mart_AV)
    }
    msgbox(gText_PleaseComeAgain, MSGBOX_DEFAULT)
	release
	end
}
mart Mart_NoAV{
    ITEM_UP_GRADE
    ITEM_DUBIOUS_DISC
    ITEM_ROTOM_CATALOG
    ITEM_PROCESSOR
    ITEM_NONE
}
mart Mart_AV{
    ITEM_ANTIVIRUS
    ITEM_UP_GRADE
    ITEM_DUBIOUS_DISC
    ITEM_ROTOM_CATALOG
    ITEM_PROCESSOR
    ITEM_NONE
}